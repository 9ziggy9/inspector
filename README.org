* Inspector Dashboard
***  Script ID files are not exposed in this repo for security purposes.
*** Building (look at Makefile)
- The build architecture here is some what unique--Makefile is used to clone the private production repo
  into a staging directory before building and bundling into a webpack. Sensitive API information is never
  exposed, only exists in local encrypted files.
- The project can also be build locally, so long as one has a mechanism of serving the build directory.
  I simply used in-build python3 http module.
  #+BEGIN_SRC console
  $ make local
  $ cd ./dist
  $ python3 -m "http.server" 9001
  #+END_SRC
*** TODOS
- [X] Implement build pipeline via Makefile which compiles TypeScript and bundles webpack.
- [X] Decouple production branch into private repository.
- [X] Implement deployment pipeline to serve webpack from GH pages.
- [X] Establish very simple OpenLayer API bundle in main application.
- [X] Obtain list of users for OAuth
- [X] Configure OAuth and relevant scopes for application.
- [X] Determine some type of sane type system for sheet data.
- [X] Read in data rows from sheets.
- [X] Abstract viewport section, allowing switchable and closable panes
- [X] Implement geocoding via address from pulled data: possible api is nominatim.
- [X] Cache nominatim results locally
- [x] Please implement backoff algorithm for nominatim searching, limit 1 req per 2 seconds.
- [x] Indicate when no cache is available so users don't pull their hair out.
- [ ] Make data table scrollable/sortable
- [ ] Implement views of data table
- [x] Determine mechanism of keeping track of citation number
- [ ] Add supervisor assignment sheets
- [ ] Implementing hashing of assignments and status updates
- [ ] Implement statistical modal/interface for data.
- [ ] Bundle some charting library for data visualization.
